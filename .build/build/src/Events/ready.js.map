{
  "version": 3,
  "sources": ["../../../../build/src/Events/ready.js"],
  "sourcesContent": ["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst __1 = require(\"../..\");\r\nconst Events_1 = require(\"../Typings/Events\");\r\nexports.default = new Events_1.Event(\"ready\", () => __awaiter(void 0, void 0, void 0, function* () {\r\n    var _a;\r\n    console.log(`Connected as ${(_a = __1.client.user) === null || _a === void 0 ? void 0 : _a.tag}`);\r\n    const guildsFromApi = __1.client.guilds.cache.map((x) => x.id);\r\n    const guildsFromDB = yield __1.prisma.experiences.findMany({\r\n        select: { serverid: true },\r\n    });\r\n    let uniqueGuildsFromDB = guildsFromDB.reduce((arr, obj) => {\r\n        if (!arr.includes(obj.serverid)) {\r\n            arr.push(obj.serverid);\r\n        }\r\n        return arr;\r\n    }, []);\r\n    for (let guild in uniqueGuildsFromDB) {\r\n        if (!guildsFromApi.includes(guild)) {\r\n            yield __1.prisma.experiences.updateMany({\r\n                where: { serverid: guild },\r\n                data: { botpresent: false },\r\n            });\r\n        }\r\n        else {\r\n            yield __1.prisma.experiences.updateMany({\r\n                where: { serverid: guild },\r\n                data: { botpresent: true },\r\n            });\r\n        }\r\n    }\r\n}));\r\n"],
  "mappings": ";AACA,IAAI,YAAa,WAAQ,QAAK,aAAc,SAAU,SAAS,YAAY,GAAG,WAAW;AACrF,WAAS,MAAM,OAAO;AAAE,WAAO,iBAAiB,IAAI,QAAQ,IAAI,EAAE,SAAU,SAAS;AAAE,cAAQ,KAAK;AAAA,IAAG,CAAC;AAAA,EAAG;AAC3G,SAAO,KAAK,MAAM,IAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,aAAS,UAAU,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,KAAK,KAAK,CAAC;AAAA,MAAG,SAAS,GAAP;AAAY,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC1F,aAAS,SAAS,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,SAAS,KAAK,CAAC;AAAA,MAAG,SAAS,GAAP;AAAY,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC7F,aAAS,KAAK,QAAQ;AAAE,aAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,EAAE,KAAK,WAAW,QAAQ;AAAA,IAAG;AAC7G,UAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC;AAAA,EACxE,CAAC;AACL;AACA,OAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,MAAM,MAAM,QAAQ,OAAO;AAC3B,MAAM,WAAW,QAAQ,mBAAmB;AAC5C,QAAQ,UAAU,IAAI,SAAS,MAAM,SAAS,MAAM,UAAU,QAAQ,QAAQ,QAAQ,aAAa;AAC/F,MAAI;AACJ,UAAQ,IAAI,iBAAiB,KAAK,IAAI,OAAO,UAAU,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK;AAChG,QAAM,gBAAgB,IAAI,OAAO,OAAO,MAAM,IAAI,CAAC,MAAM,EAAE,EAAE;AAC7D,QAAM,eAAe,MAAM,IAAI,OAAO,YAAY,SAAS;AAAA,IACvD,QAAQ,EAAE,UAAU,KAAK;AAAA,EAC7B,CAAC;AACD,MAAI,qBAAqB,aAAa,OAAO,CAAC,KAAK,QAAQ;AACvD,QAAI,CAAC,IAAI,SAAS,IAAI,QAAQ,GAAG;AAC7B,UAAI,KAAK,IAAI,QAAQ;AAAA,IACzB;AACA,WAAO;AAAA,EACX,GAAG,CAAC,CAAC;AACL,WAAS,SAAS,oBAAoB;AAClC,QAAI,CAAC,cAAc,SAAS,KAAK,GAAG;AAChC,YAAM,IAAI,OAAO,YAAY,WAAW;AAAA,QACpC,OAAO,EAAE,UAAU,MAAM;AAAA,QACzB,MAAM,EAAE,YAAY,MAAM;AAAA,MAC9B,CAAC;AAAA,IACL,OACK;AACD,YAAM,IAAI,OAAO,YAAY,WAAW;AAAA,QACpC,OAAO,EAAE,UAAU,MAAM;AAAA,QACzB,MAAM,EAAE,YAAY,KAAK;AAAA,MAC7B,CAAC;AAAA,IACL;AAAA,EACJ;AACJ,CAAC,CAAC;",
  "names": []
}
