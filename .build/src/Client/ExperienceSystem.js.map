{
  "version": 3,
  "sources": ["../../../src/Client/ExperienceSystem.ts"],
  "sourcesContent": ["import { experiences } from \"@prisma/client\";\nimport { Message, TextChannel } from \"discord.js\";\nimport { client, prisma } from \"../..\";\n\nexport class ExperienceSystem {\n  private message: Message;\n  private multiplier: number = 1;\n  constructor(receivedMessage: Message) {\n    this.message = receivedMessage;\n  }\n  private SelectMultiplier(length: number): number {\n    return length < 10 ? 0.3 : length >= 10 && length < 30 ? 1 : 1.5;\n  }\n\n  private expRequired(level: number): number {\n    return 16 * level * level + 150 * level + 100;\n  }\n\n  public async GainExperience() {\n    const row: experiences | null = await prisma.experiences.findFirst({\n      where: { serverid: this.message.guildId, userid: this.message.author.id },\n    });\n    this.multiplier = this.SelectMultiplier(this.message.content.length);\n    const pointsToAdd: number = this.GenerateExperience();\n    if (row) {\n      if (row.points! + pointsToAdd > this.expRequired(row.level!)) {\n        await prisma.experiences.update({\n          where: { id: row.id },\n          data: { points: { increment: pointsToAdd }, level: { increment: 1 } },\n        });\n        this.message.channel.send(\n          `Congratulations <@${\n            this.message.author.id\n          }>, you just reached level ${row.level! + 1}!`\n        );\n      } else {\n        await prisma.experiences.update({\n          where: { id: row.id },\n          data: { points: { increment: pointsToAdd } },\n        });\n      }\n    } else {\n      await prisma.experiences.create({\n        data: {\n          serverid: this.message.guildId,\n          userid: this.message.author.id,\n          points: pointsToAdd,\n          level: 0,\n        },\n      });\n    }\n    client.talkedRecentlyExp.push({\n      guildID: this.message.guildId,\n      userID: this.message.author.id,\n    });\n\n    setTimeout(() => {\n      try {\n        client.talkedRecentlyExp.splice(\n          client.talkedRecentlyExp.indexOf({\n            guildID: this.message.guildId,\n            userID: this.message.author.id,\n          }),\n          1\n        );\n      } catch (err) {\n        console.error(err);\n      }\n    }, 30000);\n  }\n  private GenerateExperience(): number {\n    let pointsAdded = Math.floor(\n      (Math.random() * (10 - 4 + 1) + 4) * this.multiplier\n    );\n    return pointsAdded;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,eAA+B;AAExB,MAAM,iBAAiB;AAAA,EAG5B,YAAY,iBAA0B;AADtC,SAAQ,aAAqB;AAE3B,SAAK,UAAU;AAAA,EACjB;AAAA,EACQ,iBAAiB,QAAwB;AAC/C,WAAO,SAAS,KAAK,MAAM,UAAU,MAAM,SAAS,KAAK,IAAI;AAAA,EAC/D;AAAA,EAEQ,YAAY,OAAuB;AACzC,WAAO,KAAK,QAAQ,QAAQ,MAAM,QAAQ;AAAA,EAC5C;AAAA,EAEA,MAAa,iBAAiB;AAC5B,UAAM,MAA0B,MAAM,gBAAO,YAAY,UAAU;AAAA,MACjE,OAAO,EAAE,UAAU,KAAK,QAAQ,SAAS,QAAQ,KAAK,QAAQ,OAAO,GAAG;AAAA,IAC1E,CAAC;AACD,SAAK,aAAa,KAAK,iBAAiB,KAAK,QAAQ,QAAQ,MAAM;AACnE,UAAM,cAAsB,KAAK,mBAAmB;AACpD,QAAI,KAAK;AACP,UAAI,IAAI,SAAU,cAAc,KAAK,YAAY,IAAI,KAAM,GAAG;AAC5D,cAAM,gBAAO,YAAY,OAAO;AAAA,UAC9B,OAAO,EAAE,IAAI,IAAI,GAAG;AAAA,UACpB,MAAM,EAAE,QAAQ,EAAE,WAAW,YAAY,GAAG,OAAO,EAAE,WAAW,EAAE,EAAE;AAAA,QACtE,CAAC;AACD,aAAK,QAAQ,QAAQ;AAAA,UACnB,qBACE,KAAK,QAAQ,OAAO,+BACO,IAAI,QAAS;AAAA,QAC5C;AAAA,MACF,OAAO;AACL,cAAM,gBAAO,YAAY,OAAO;AAAA,UAC9B,OAAO,EAAE,IAAI,IAAI,GAAG;AAAA,UACpB,MAAM,EAAE,QAAQ,EAAE,WAAW,YAAY,EAAE;AAAA,QAC7C,CAAC;AAAA,MACH;AAAA,IACF,OAAO;AACL,YAAM,gBAAO,YAAY,OAAO;AAAA,QAC9B,MAAM;AAAA,UACJ,UAAU,KAAK,QAAQ;AAAA,UACvB,QAAQ,KAAK,QAAQ,OAAO;AAAA,UAC5B,QAAQ;AAAA,UACR,OAAO;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AACA,oBAAO,kBAAkB,KAAK;AAAA,MAC5B,SAAS,KAAK,QAAQ;AAAA,MACtB,QAAQ,KAAK,QAAQ,OAAO;AAAA,IAC9B,CAAC;AAED,eAAW,MAAM;AACf,UAAI;AACF,wBAAO,kBAAkB;AAAA,UACvB,gBAAO,kBAAkB,QAAQ;AAAA,YAC/B,SAAS,KAAK,QAAQ;AAAA,YACtB,QAAQ,KAAK,QAAQ,OAAO;AAAA,UAC9B,CAAC;AAAA,UACD;AAAA,QACF;AAAA,MACF,SAAS,KAAP;AACA,gBAAQ,MAAM,GAAG;AAAA,MACnB;AAAA,IACF,GAAG,GAAK;AAAA,EACV;AAAA,EACQ,qBAA6B;AACnC,QAAI,cAAc,KAAK;AAAA,OACpB,KAAK,OAAO,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK;AAAA,IAC5C;AACA,WAAO;AAAA,EACT;AACF;",
  "names": []
}
