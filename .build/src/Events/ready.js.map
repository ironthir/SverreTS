{
  "version": 3,
  "sources": ["../../../src/Events/ready.ts"],
  "sourcesContent": ["import { experiences } from \"@prisma/client\";\nimport { client, prisma } from \"../..\";\nimport { Event } from \"../Typings/Events\";\n\nexport default new Event(\"ready\", async () => {\n  console.log(`Connected as ${client.user?.tag}`);\n  const guildsFromApi = client.guilds.cache.map((x) => x.id);\n  const guildsFromDB = await prisma.experiences.findMany({\n    select: { serverid: true },\n  });\n  let uniqueGuildsFromDB = guildsFromDB.reduce((arr, obj) => {\n    if (!arr.includes(obj.serverid!)) {\n      arr.push(obj.serverid!);\n    }\n    return arr;\n  }, [] as string[]);\n\n  for (let guild in uniqueGuildsFromDB) {\n    if (!guildsFromApi.includes(guild)) {\n      await prisma.experiences.updateMany({\n        where: { serverid: guild },\n        data: { botpresent: false },\n      });\n    } else {\n      await prisma.experiences.updateMany({\n        where: { serverid: guild },\n        data: { botpresent: true },\n      });\n    }\n  }\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,eAA+B;AAC/B,oBAAsB;AAEtB,IAAO,gBAAQ,IAAI,oBAAM,SAAS,YAAY;AAJ9C;AAKE,UAAQ,IAAI,iBAAgB,qBAAO,SAAP,mBAAa,KAAK;AAC9C,QAAM,gBAAgB,gBAAO,OAAO,MAAM,IAAI,CAAC,MAAM,EAAE,EAAE;AACzD,QAAM,eAAe,MAAM,gBAAO,YAAY,SAAS;AAAA,IACrD,QAAQ,EAAE,UAAU,KAAK;AAAA,EAC3B,CAAC;AACD,MAAI,qBAAqB,aAAa,OAAO,CAAC,KAAK,QAAQ;AACzD,QAAI,CAAC,IAAI,SAAS,IAAI,QAAS,GAAG;AAChC,UAAI,KAAK,IAAI,QAAS;AAAA,IACxB;AACA,WAAO;AAAA,EACT,GAAG,CAAC,CAAa;AAEjB,WAAS,SAAS,oBAAoB;AACpC,QAAI,CAAC,cAAc,SAAS,KAAK,GAAG;AAClC,YAAM,gBAAO,YAAY,WAAW;AAAA,QAClC,OAAO,EAAE,UAAU,MAAM;AAAA,QACzB,MAAM,EAAE,YAAY,MAAM;AAAA,MAC5B,CAAC;AAAA,IACH,OAAO;AACL,YAAM,gBAAO,YAAY,WAAW;AAAA,QAClC,OAAO,EAAE,UAAU,MAAM;AAAA,QACzB,MAAM,EAAE,YAAY,KAAK;AAAA,MAC3B,CAAC;AAAA,IACH;AAAA,EACF;AACF,CAAC;",
  "names": []
}
